apply plugin: 'com.android.application'

android {
    def globalConfig = rootProject.ext.android
    compileSdkVersion globalConfig.compileSdkVersion as int
    defaultConfig {
        applicationId "com.seven.mall"
        minSdkVersion globalConfig.minSdkVersion as int
        targetSdkVersion globalConfig.targetSdkVersion as int
        versionCode globalConfig.versionCode as int
        versionName globalConfig.versionName as String
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        flavorDimensions "versionCode"

        multiDexEnabled true

        manifestPlaceholders = [
                JPUSH_PKGNAME : applicationId,
                JPUSH_APPKEY : "aafe794d2a1b593711fce4fc", //JPush 上注册的包名对应的 Appkey.
                JPUSH_CHANNEL : "developer-default", //暂时填写默认值即可.
        ]

        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
                includeCompileClasspath = true
            }
        }
    }
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    productFlavors {
        m360 {}
        baidu {}
        xiaomi {}
        oppo {}
        google {}
        tencent {}
        huawei {}
        offical {}
        vivo {}
        pugongying {}
    }

    /**和上面多渠道打包配合使用的，这是一种简写方法*/
    productFlavors.all {
        flavor -> flavor.manifestPlaceholders = [CHANNEL_VALUE: name]
    }
}
repositories {
    flatDir {
        dirs 'libs'
    }
}
repositories {
    flatDir {
        dirs 'libs', project(':lib_opensource').file('libs')
    }
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation "com.android.support:appcompat-v7:${rootProject.ext.dependencies.googleSupportVersion}"
    annotationProcessor "com.alibaba:arouter-compiler:${rootProject.ext.arouter.compiler}"
    implementation "com.android.support:multidex:${rootProject.ext.multidex.version}"
    implementation 'com.github.zackratos.ultimatebar:ultimatebar3:3.1.1'

    compile 'cn.jiguang.sdk:jpush:3.1.1'
    compile 'cn.jiguang.sdk:jcore:1.1.9'

    implementation project(':lib_opensource')
    implementation project(':lib_common')
    implementation project(':lib_router')
    implementation project(':lib_model')
    implementation project(':module_extension')
    implementation project(':module_home')
    implementation project(':module_model')
    implementation project(':module_user')
}
